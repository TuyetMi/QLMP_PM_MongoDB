<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>